/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Ventana.java
 *
 * Created on 18/06/2014, 03:39:38 AM
 */
package Ventanas;

import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.*;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;

/**
 *
 * @author Alumno
 */
public class Grafica extends javax.swing.JFrame {

    private BufferedImage _image;  //para la imagen en memoria
    private JFreeChart grafico; //en grafico

    private Dimension d; //DIMENCION DEL GRAFICO

    /**
     * Creates new form Ventana
     */
    public Grafica() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButtonImprimirGrafica = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 348, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 304, Short.MAX_VALUE)
        );

        jButton1.setText("Mostrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Guardar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButtonImprimirGrafica.setText("Imprimir Grafica");
        jButtonImprimirGrafica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImprimirGraficaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonImprimirGrafica)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButtonImprimirGrafica))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void crear_grafico_de_barras(Dimension d, int[] v, String[] arg1, String[] arg2, String[] data) {
        // throw new UnsupportedOperationException("Not yet implemented");
        this.d = d;
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        //se llenan datos
        for (int i = 0; i <= v.length - 1; i++) {
            dataset.setValue(v[i], arg1[i], arg2[i]);
        }
        //secrea el grafico
        grafico = ChartFactory.createBarChart3D(data[0], data[1], data[2], dataset, PlotOrientation.VERTICAL, true, false, true);
        //se coloca el grafico en memoria
        _image = grafico.createBufferedImage(this.d.width, this.d.height);
        System.err.println("grafico creado");

    }

    public void cargar_grafico(JLabel lb) {
        ImageIcon imagenFondo = new ImageIcon(_image);
        lb.setIcon(imagenFondo);
        lb.repaint();
    }

    public void Guardar() {

        JFileChooser filechooser = new JFileChooser();
        int result = filechooser.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                String url = filechooser.getSelectedFile().toString();
                ChartUtilities.saveChartAsJPEG(new File(url + ".jpg"), grafico, d.width, d.height);
            } catch (Exception ex) {
                Logger.getLogger(Grafica.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private PieDataset createDataset() {
        final DefaultPieDataset dataset = new DefaultPieDataset();
        try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver").newInstance();
            //Connection cn = DriverManager.getConnection("jdbc:odbc:prueba","DELL1685","sasa");
            Connection cn = DriverManager.getConnection("jdbc:odbc:pruebagrafica", "TRON-PC\\TRON ", "sasa");
            //Statement st = cn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            Statement st = cn.createStatement();
            ResultSet rst = st.executeQuery("select edad,count(edad) as frecuencia from alumno group by edad");
            if (rst.next()) {
                do {
                    String edad = rst.getString(1);
                    double fedad = rst.getDouble(2);
                    dataset.setValue(edad, new Double(fedad));
                } while (rst.next());
                return dataset;
            }
        } catch (Exception er) {
            System.out.println("error " + er);
        }
        return null;
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        try {
            Dimension d = jPanel1.getSize();
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver").newInstance();
            Connection cn = DriverManager.getConnection("jdbc:odbc:Proyecto", "sa", "sasa");
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery("select status,count(status)as numero_reparados from estado group by status ");
            String[] arg1 = {"No reparados", "Reparados"};
            String[] arg2 = {"No reparados", "Reparados"};
            String[] data = {"Grafica status", "equipos ", "Cantidad"};
            int[] valores = new int[2];
            int n = 0;
            if (rs.next()) {
                //int[] valores = new int[2];
                //valores[0] = rs.getInt(2);
                //valores[1] = rs.getInt(2);
                do {
                    //JOptionPane.showMessageDialog(null, rs.getString("sexo"));
                    //JOptionPane.showMessageDialog(null, rs.getInt("cantidad"));
                    valores[n] = rs.getInt("numero_reparados");
                    n++;
                } while (rs.next());
            }
            crear_grafico_de_barras(d, valores, arg2, arg1, data);
            JLabel j = new JLabel();
            j.setBounds(0, 0, d.width, d.height);
            //se caqrga el grafico en memoria
            cargar_grafico(j);
            jPanel1.add(j);
            this.repaint();

        } catch (Exception er) {
            System.out.println(er);
        }

//        //se crea un variable para k tome las dimenciones del jpanel
//        Dimension d = jPanel1.getSize();
//        //datos de la grafica
//        int[] valores = {1000, 2011, 3030, 1569, 2688, 4587};
//        String[] arg1 = {"Enero", "Febrero", "Marzo", "Enero", "Febrero", "Marzo"};
//        String[] arg2 = {"Visitas", "Visitas", "Visitas", "Hits", "Hits", "Hits"};
//        //titulos de las barras en los ejes x & y
//        String[] data = {"Titulo", "Eje X", "Eje Y"};
//
//        crear_grafico_de_barras(d, valores, arg2, arg1, data);
//        //se crea un jlabel para colocar el grafico
//        JLabel j = new JLabel();
//        j.setBounds(0, 0, d.width, d.height);
//        //se caqrga el grafico en memoria
//        cargar_grafico(j);
//        jPanel1.add(j);
//        this.repaint();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Guardar();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButtonImprimirGraficaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImprimirGraficaActionPerformed
        ImprimirGrafica ventana = new ImprimirGrafica();
        ventana.setVisible(true);        
        //ventana.setBounds(400, 150, 335, 325);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonImprimirGraficaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Grafica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonImprimirGrafica;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

}
